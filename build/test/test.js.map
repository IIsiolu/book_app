{"version":3,"sources":["../../api/test/test.js"],"names":["chai","use","chatHttp","expect","describe","it","done","book","title","price","description","request","app","post","set","send","end","err","res","status","to","equal","body","data","include","id","get","should","have","property","bookId","eql","updatedBook","put"],"mappings":"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","sourcesContent":["import chai from 'chai';\r\nimport chatHttp from 'chai-http';\r\nimport 'chai/register-should';\r\nimport app from '../app';\r\n\r\nchai.use(chatHttp);\r\nconst { expect } = chai;\r\n\r\ndescribe('Testing the book endpoints:', () => {\r\n    it('It should create a book', (done) => {\r\n        const book = {\r\n            title: 'First Awesome book',\r\n            price: '$9.99',\r\n            description: 'This is the awesome book'\r\n        };\r\n        chai.request(app)\r\n            .post('/api/v1/books')\r\n            .set('Accept', 'application/json')\r\n            .send(book)\r\n            .end((err, res) => {\r\n                expect(res.status).to.equal(201);\r\n                expect(res.body.data).to.include({\r\n                    id: 1,\r\n                    title: book.title,\r\n                    price: book.price,\r\n                    description: book.description\r\n                });\r\n                done();\r\n            });\r\n    });\r\n\r\n    it('It should not create a book with incomplete parameters', (done) => {\r\n        const book = {\r\n            price: '$9.99',\r\n            description: 'This is the awesome book'\r\n        };\r\n        chai.request(app)\r\n            .post('/api/v1/books')\r\n            .set('Accept', 'application/json')\r\n            .send(book)\r\n            .end((err, res) => {\r\n                expect(res.status).to.equal(400);\r\n                done();\r\n            });\r\n    });\r\n\r\n    it('It should get all books', (done) => {\r\n        chai.request(app)\r\n            .get('/api/v1/books')\r\n            .set('Accept', 'application/json')\r\n            .end((err, res) => {\r\n                expect(res.status).to.equal(200);\r\n                res.body.data[0].should.have.property('id');\r\n                res.body.data[0].should.have.property('title');\r\n                res.body.data[0].should.have.property('price');\r\n                res.body.data[0].should.have.property('description');\r\n                done();\r\n            });\r\n    });\r\n\r\n    it('It should get a particular book', (done) => {\r\n        const bookId = 1;\r\n        chai.request(app)\r\n            .get(`/api/v1/books/${bookId}`)\r\n            .set('Accept', 'application/json')\r\n            .end((err, res) => {\r\n                expect(res.status).to.equal(200);\r\n                res.body.data.should.have.property('id');\r\n                res.body.data.should.have.property('title');\r\n                res.body.data.should.have.property('price');\r\n                res.body.data.should.have.property('description');\r\n                done();\r\n            });\r\n    });\r\n\r\n    it('It should not get a particular book with invalid id', (done) => {\r\n        const bookId = 8888;\r\n        chai.request(app)\r\n            .get(`/api/v1/books/${bookId}`)\r\n            .set('Accept', 'application/json')\r\n            .end((err, res) => {\r\n                expect(res.status).to.equal(404);\r\n                res.body.should.have.property('message').eql(`Cannot find book with the id ${bookId}`);\r\n                done();\r\n            });\r\n    });\r\n\r\n    it('It should not get a particular book with non numeric id', (done) => {\r\n        const bookId = 'aaa';\r\n        chai.request(app)\r\n            .get(`/api/v1/books/${bookId}`)\r\n            .set('Accept', 'application/json')\r\n            .end((err, res) => {\r\n                expect(res.status).to.equal(400);\r\n                res.body.should.have.property('message').eql('Please input a valid numeric value');\r\n                done();\r\n            });\r\n    });\r\n\r\n    it('It should update a book', (done) => {\r\n        const bookId = 1;\r\n        const updatedBook = {\r\n            id: bookId,\r\n            title: 'Updated Awesome book',\r\n            price: '$10.99',\r\n            description: 'We have updated the price'\r\n        };\r\n        chai.request(app)\r\n            .put(`/api/v1/books/${bookId}`)\r\n            .set('Accept', 'application/json')\r\n            .send(updatedBook)\r\n            .end((err, res) => {\r\n                expect(res.status).to.equal(200);\r\n                expect(res.body.data.id).equal(updatedBook.id);\r\n                expect(res.body.data.title).equal(updatedBook.title);\r\n                expect(res.body.data.price).equal(updatedBook.price);\r\n                expect(res.body.data.description).equal(updatedBook.description);\r\n                done();\r\n            });\r\n    });\r\n\r\n    it('It should not update a book with invalid id', (done) => {\r\n        const bookId = 999;\r\n        const updatedBook = {\r\n            id: bookId,\r\n            title: 'Updated Awesome book',\r\n            price: '$10.99',\r\n            description: 'We have updated the price'\r\n        };\r\n        chai.request(app)\r\n            .put(`/api/v1/books/${bookId}`)\r\n            .set('Accept', 'application/json')\r\n            .send(updatedBook)\r\n            .end((err, res) => {\r\n                expect(res.status).to.equal(404);\r\n                res.body.should.have.property('message').eql(`Cannot find book with the id: ${bookId}`);\r\n                done();\r\n            });\r\n    });\r\n\r\n    it('It should not update a book with non-numeric id value', (done) => {\r\n        const bookId = 'ggg';\r\n        const updatedBook = {\r\n            id: bookId,\r\n            title: 'Updated Awesome book',\r\n            price: '$10.99',\r\n            description: 'We have updated the price'\r\n        };\r\n        chai.request(app)\r\n            .put(`/api/v1/books/${bookId}`)\r\n            .set('Accept', 'application/json')\r\n            .send(updatedBook)\r\n            .end((err, res) => {\r\n                expect(res.status).to.equal(400);\r\n                res.body.should.have.property('message').eql('Please input a valid numeric value');\r\n                done();\r\n            });\r\n    });\r\n\r\n    it('It should delete a book', (done) => {\r\n        const bookId = 1;\r\n        chai.request(app)\r\n            .delete(`/api/v1/books/${bookId}`)\r\n            .set('Accept', 'application/json')\r\n            .end((err, res) => {\r\n                expect(res.status).to.equal(200);\r\n                expect(res.body.data).to.include({});\r\n                done();\r\n            });\r\n    });\r\n\r\n    it('It should not delete a book with invalid id', (done) => {\r\n        const bookId = 999;\r\n        chai.request(app)\r\n            .delete(`/api/v1/books/${bookId}`)\r\n            .set('Accept', 'application/json')\r\n            .end((err, res) => {\r\n                expect(res.status).to.equal(404);\r\n                res.body.should.have.property('message').eql(`Book with the id ${bookId} cannot be found`);\r\n                done();\r\n            });\r\n    });\r\n\r\n    it('It should not delete a book with non-numeric id', (done) => {\r\n        const bookId = 'aaa';\r\n        chai.request(app)\r\n            .delete(`/api/v1/books/${bookId}`)\r\n            .set('Accept', 'application/json')\r\n            .end((err, res) => {\r\n                expect(res.status).to.equal(400);\r\n                res.body.should.have.property('message').eql('Please provide a valid numeric value');\r\n                done();\r\n            });\r\n    });\r\n});"],"file":"test.js"}